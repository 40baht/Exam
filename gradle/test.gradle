dependencies {
    testCompile 'com.h2database:h2:1.4.195'
    testCompile 'org.assertj:assertj-core:3.10.0'
    testCompile 'com.github.tomakehurst:wiremock-standalone:2.25.1'
    testCompile 'org.mockito:mockito-core:2.28.2'

    testCompile "io.ktor:ktor-server-jetty:$ktor_version"
    testCompile "io.ktor:ktor-jackson:$ktor_version"
    testCompile "io.ktor:ktor-websockets:$ktor_version"

    testCompile "org.jetbrains.exposed:exposed:$exposed_version"
    testCompile "ch.qos.logback:logback-classic:1.2.1"
    testCompile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.9.5'

    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

test {
    include 'com/**'
    include '**/Specs.class'
    systemProperty 'concordion.output.dir', "$reporting.baseDir/specs"
    finalizedBy jacocoTestReport
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    testLogging.events 'FAILED'
    maxParallelForks = Runtime.runtime.availableProcessors()
}

jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml {
            enabled true
        }
    }
    afterEvaluate {
        getClassDirectories().setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/test/**'])
        }))
    }
}

tasks.check.dependsOn 'jacocoTestReport'