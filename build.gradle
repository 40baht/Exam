buildscript {
    ext.kotlin_version = '1.4.32'
    ext.ktor_version = '1.4.1'
    ext.exposed_version = '0.30.1'
    ext.restAssured_version = '4.3.3'
    ext.wiremock_version = '2.27.2'
    ext.klogging_version = '2.0.6'
    ext.libVersion = '5.0.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.14.2"
    }
}

group 'io.github.adven27'
version = libVersion

subprojects {
    apply plugin: "io.gitlab.arturbosch.detekt"
    apply plugin: 'kotlin'
    apply plugin: 'java'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
        jcenter {
            content {
                // Only download the 'kotlinx-html-jvm' module from JCenter, but nothing else.
                // detekt needs 'kotlinx-html-jvm' for the HTML report.
                includeModule("org.jetbrains.kotlinx", "kotlinx-html-jvm")
            }
        }
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    compileJava.options.encoding = 'utf-8'
    compileTestJava.options.encoding = 'utf-8'

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    }

    test {
        systemProperty "user.timezone", "Europe/Moscow"
        testLogging.showStandardStreams = true
        testLogging.exceptionFormat = 'full'
        testLogging.events('FAILED', 'PASSED')
        maxParallelForks = Runtime.runtime.availableProcessors()
    }

    apply from: "$rootDir/gradle/linters.gradle"
}

task publish {
    dependsOn ":exam-core:uploadArchives"
    dependsOn ":exam-db:uploadArchives"
    dependsOn ":exam-ws:uploadArchives"
    dependsOn ":exam-mq:uploadArchives"
    dependsOn ":exam-mq-rabbit:uploadArchives"
    dependsOn ":exam-mq-kafka:uploadArchives"
    dependsOn ":exam-mq-ibmmq:uploadArchives"
    dependsOn ":exam-mq-redis:uploadArchives"
    dependsOn ":exam-files:uploadArchives"
    dependsOn ":exam-ui:uploadArchives"
    dependsOn ":exam-ms:uploadArchives"
}
